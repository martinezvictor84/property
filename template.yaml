AWSTemplateFormatVersion: "2010-09-09"
Transform: 'AWS::Serverless-2016-10-31'
Description: "Project serverless property habi"

Parameters:
  ListenerFunctionTimeout:
      Description: Tiempo de duracion de la lambda Listener, controlara tambien el tiempo de observacion del Queue
      Type: Number
      Default: 30
  MaxReceiveCount:
      Description: Este parametro determina el numero maximo de mensajes que se enviaran (en conjunto) a una sola lambda, por ejemplo, si se define 10, se enviaran en batch de 10 mensajes por evento de lambda.
      Type: Number
      Default: 3
  QueueMaximumMessageSize:
    Description: Determina en bytes, el tama√±o maximo de los mensajes que puede procesar, el maximo global es de 262144 bytes.
    Type: Number
    Default: 262144
  DbHost:
    Description: host of database
    Type: String
    Default: ""
  DbPort:
    Description: port database
    Type: String
    Default: ""
  DbUser:
    Description: user database
    Type: String
    Default: ""
  DbPass:
    Description: password database
    Type: String
    Default: ""
  DbName:
    Description: schema database
    Type: String
    Default: ""

Resources:
  HabiApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: api
      Cors: "'*'"
  GetPropertiesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: app.property_handler
      Runtime: python3.8
      Environment:
        Variables:
          DB_HOST: !Ref DbHost
          DB_PORT: !Ref DbPort
          DB_USER: !Ref DbUser
          DB_PASS: !Ref DbPass
          DB_NAME: !Ref DbName
      Events:
        GetProperties:
          Type: Api
          Properties:
            Path: /property
            Method: get
            RestApiId: !Ref HabiApi
Outputs:
  HabiApiUrl:
    Description: "API Gateway endpoint URL Habi API"
    Value: !Sub "https://${HabiApi}.execute-api.${AWS::Region}.amazonaws.com/api/"
